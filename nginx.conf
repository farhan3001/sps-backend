#user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '[$time_local] $remote_addr - $remote_user "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" "$http_signature"';

    access_log /var/log/nginx/access.log main;

    log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name '
                          'to: upstream_addr: $request upstream_response_time $upstream_response_time '
                          'msec $msec request_time $request_time $http_signature';

    access_log /var/log/nginx/upstream.log upstreamlog;

    sendfile on;
    keepalive_timeout 65;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 1903 default_server ssl;
	    server_name sps_frontend;

        ssl_certificate /var/lib/nginx/cert/cert.crt;
        ssl_certificate_key /var/lib/nginx/cert/cert.key;
	
#	if ($scheme = http) {
#            return 301 https://$http_host$request_uri;
#        }        

       location /{
            root /var/www/html/sps;
            index index.html;
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            etag off;
            if_modified_since off;
        }

      location /api/{
           proxy_pass https://localhost:3000/api/;
      }
    }

	server {
        listen 3000 default_server ssl;
	    server_name sps_backend;

        ssl_certificate /var/lib/nginx/cert/cert.crt;
        ssl_certificate_key /var/lib/nginx/cert/cert.key;

        

       location /{
            proxy_pass http://10.14.237.124:8090/;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            etag off;
            if_modified_since off;	
        }
    }


}
